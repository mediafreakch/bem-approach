'use strict';

var locals = require('app_localization');

// state
var state = {
  locals: {}
}

// getters
var getters = {
  locals: function(state) {
    return state.locals;
  }
}

// mutations
var mutations = {
  EXTEND_LOCALS: function(state, localsToExtend) {
    var local, result = {};
    // never iterate directly over state! Else you overwrite store.state all the time
    // therefore we prepare an object "result", that we update at once later
    for (var id in localsToExtend ) {
      if ( localsToExtend.hasOwnProperty( id ) ) {
        local = localsToExtend[id];
        result[id] = local;
      }
    }
    state.locals = Object.assign({}, result);
  }
}

// Actions
var actions = {
  getLocals: function(store) {
    return new Promise(function(resolve, reject) {
      resolve(locals);
    }).then(function(data) {
      store.commit('EXTEND_LOCALS', data);
    })
  }
}

module.exports = {
  state: state,
  mutations: mutations,
  actions: actions,
  getters: getters
}
