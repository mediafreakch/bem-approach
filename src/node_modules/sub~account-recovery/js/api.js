"use strict";

var
  ajax = require('app~utils').ajax;

module.exports = {
  mixins: [
    ajax
  ],
  methods: {
    api_retrieveMobilePart: function() {
      this.setInputIsRetrievingDataState('userOrEmail', true);
      this.removeError();
      return this.$http.get( 'http://localhost:3000/users/'+ encodeURI(this.user.id) + '/phone/get-mobile-part' )
                .then( response => { // success
                  this.setPhonePart(response.data.body.part);
                  if(response.data.body.landline) {
                    this.setLandline();
                    this.setInputIsRetrievingDataState('userOrEmail', false);
                    this.setActiveForm('formPassport');
                    this.$nextTick( () => {
                      document.getElementById('pass').focus();
                    })
                  } else {
                    this.setMobile();
                    this.setInputIsRetrievingDataState('userOrEmail', false);
                    this.setActiveForm('formRequestSms');
                  }
                }, response => { // error
                  this.setPhonePart('');
                  this.handleErrorCase(response);
                  this.setInputIsRetrievingDataState('userOrEmail', false);
                });
    },
    api_requestSmsCode: function() {
      this.setFormIsRetrievingDataState(true);
      this.removeError();
      return this.$http.post( 'http://localhost:3000/users/'+ encodeURI(this.user.id) + '/phone/request-sms')
                .then ( response => { // success
                  this.setSmsRequestedStateTrue();
                  this.setFormIsRetrievingDataState(false);
                  this.setAuthyId(response.data.body.authyId);
                  this.setActiveForm('formVerify');
                  this.$nextTick(function() {
                    document.getElementById('verificationCode').focus();
                  });
                }, response => { // error
                  this.setFormIsRetrievingDataState(false);
                  this.handleErrorCase(response);
                });
    },
    api_verifySmsCode: function() {
      this.setFormIsRetrievingDataState(true);
      this.removeError();
      return this.$http.post( 'http://localhost:3000/users/'+ encodeURI(this.user.id) + '/phone/verify', {data: {authyId: this.user.authyId, authyToken: this.authyToken } })
                .then ( response => {
                  this.setFormIsRetrievingDataState(false);
                  this.setActiveForm('formReCreateEmailAndPassword');
                  this.setTempToken(response.data.body.token);
                  this.$route.router.go( {
                    name: 'account-recreate'
                  } );
                }, response => {
                  this.setFormIsRetrievingDataState(false);
                  this.handleErrorCase(response);
                });
    },
    api_sendPassportImage: function() {
      this.setFormIsRetrievingDataState(true);
      this.removeError();
      return this.$http.post('http://localhost:3000/users/' + encodeURI(this.user.id) + '/passport', {data: {img: encodeURI(this.passportImage)}})
                .then( response => { // success
                  this.setFormIsRetrievingDataState(false);
                  this.setPassportSubmitted();
                }, response => { // error
                  this.setFormIsRetrievingDataState(false);
                  this.handleErrorCase(response);
                });
    }
  }
};