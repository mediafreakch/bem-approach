"use strict";

var
  Vue = require('vue'),
  Vuex = require('vuex'),
  localizationModule = require('vuex_localization').module;

// install Vuex
Vue.use(Vuex);

module.exports = new Vuex.Store({

  modules: {
    localization: localizationModule
  },
  state: {

    forms: {
      formOldEmail: {
        inputs: {
          userOrEmail: {
            value: '',
            isValid: false,
            vRef: 'userOrEmail',
            isRetrievingData: false
          }
        },
        isValid: false
      },
      formPassport: {
        inputs: {
          pass: {
            value: '',
            isValid: false
          }
        },
        isRetrievingData: false,
        isValid: false
      },
      formRequestSms: {
        inputs: {},
        isValid: true,
        isRetrievingData: false
      },
      formVerify: {
        inputs: {
          verificationCode: {
            value: '',
            isValid: false
          }
        },
        isRetrievingData: false,
        isValid: false
      },
      formReCreateEmailAndPassword: {
        inputs: {
          newEmail: '',
          newPassword: ''
        },
        isRetrievingData: false,
        isValid: false
      },
      formEditEmail: {
        inputs: {
          newEmail: '',
          password: ''
        },
        isRetrievingData: false,
        isValid: false
      }
    },
    activeForm: 'formOldEmail',
    errorMessage: 'Ein Fehler is aufgetreten. Leider stehen zur Zeit keine weiteren Informationen zur Verf√ºgung.',
    states: {
      isLandline: false,
      isMobile: false,
      isError: false,
      isSmsCodeRequested: false,
      isAccountRestored: false,
      isPassportSubmitted: false,
      isImageLoaded: false,
      isConfirmationEmailSent: false
    },
    user: {
      id: '',
      phonePart: '',
      authyId: '',
      passportImage: '',
      tempToken: '',
      newEmail: '',
      newPassword: '',
      password: ''
    },
    something: 'something'
  },

  mutations: {
    SET_FORM_VALIDATION_STATE: function(state, newState) {
      state.forms[state.activeForm].isValid = newState;
    },
    SET_INPUT_VALIDATION_STATE: function(state, inputId, newState) {
      state.forms[state.activeForm].inputs[inputId].isValid = newState;
    },
    SET_INPUT_VALUE: function(state, inputId, newValue) {
      state.forms[state.activeForm].inputs[inputId].value = newValue;
    },
    SET_INPUT_IS_RETRIEVING_DATA_STATE: function(state, inputId, newState) {
      state.forms[state.activeForm].inputs[inputId].isRetrievingData = newState;
    },
    SET_FORM_IS_RETRIEVING_DATA_STATE: function(state, newState) {
      state.forms[state.activeForm].isRetrievingData = newState;
    },
    SET_LANDLINE_STATE: function(state, newState){
      state.states.isLandline = newState;
      state.states.isMobile = !newState;
    },
    SET_MOBILE_STATE: function(state, newState) {
      state.states.isMobile = newState;
      state.states.isLandline = !newState;
    },
    SET_ERROR_MESSAGE: function(state, newMessage) {
      state.errorMessage = newMessage;
    },
    SET_ERROR_STATE: function(state, newState) {
      state.states.isError = newState;
    },
    SET_SMS_REQUESTED_STATE: function(state, newState) {
      state.states.isSmsCodeRequested = newState;
    },
    SET_ACCOUNT_RESTORED_STATE: function(state, newState) {
      state.states.isAccountRestored = newState;
    },
    SET_USER_ID: function(state, newId) {
      state.user.id = newId;
    },
    SET_PHONE_PART: function(state, newValue) {
      state.user.phonePart = newValue;
    },
    SET_AUTHY_ID: function(state, newValue) {
      state.user.authyId = newValue;
    },
    SET_ACTIVE_FORM: function(state, newForm) {
      state.activeForm = newForm;
    },
    SET_PASSPORT_IMAGE: function(state, newImage) {
      state.user.passportImage = newImage;
    },
    SET_PASSPORT_SUBMITTED: function(state) {
      state.states.isPassportSubmitted = true;
    },
    SET_IMAGE_LOADED: function(state) {
      state.states.isImageLoaded = true;
    },
    SET_CONFIRMATION_EMAIL_SENT: function(state, newState) {
      state.states.isConfirmationEmailSent = newState;
    },
    SET_TEMP_TOKEN: function(state, newToken) {
      state.user.tempToken = newToken;
    },
    SET_USER_NEW_EMAIL: function(state, newEmail) {
      state.user.newEmail = newEmail;
    },
    SET_USER_NEW_PASSWORD: function(state, newPassword) {
      state.user.newPassword = newPassword;
    },
    SET_USER_PASSWORD: function(state, password) {
      state.user.password = password;
    }
  }
});